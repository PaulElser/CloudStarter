services:
  webserver:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./GeoLite2-City.mmdb:/etc/nginx/GeoLite2-City.mmdb:ro
      - ./index.html:/usr/share/nginx/html/index.html:ro
      - ./nginx_logs:/var/log/nginx
    networks:
      - mynetwork
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/stub_status"]
      interval: 10s
      timeout: 5s
      retries: 3

  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:0.9.0
    ports:
      - "9113:9113"
    command:
      - -nginx.scrape-uri=http://webserver:80/stub_status
    depends_on:
      webserver:
        condition: service_healthy
    networks:
      - mynetwork

  node_exporter:
    image: prom/node-exporter
    ports:
      - "9100:9100"
    command:
      - '--path.rootfs=/host'
    pid: host
    restart: unless-stopped
    volumes:
      - '/:/host:ro,rslave'
    networks:
      - mynetwork

  geoip-exporter:
    build:
      context: .
      dockerfile: Dockerfile.geoip-exporter
    ports:
      - "9114:9114"
    volumes:
      - ./nginx_logs:/var/log/nginx:ro
      - ./GeoLite2-City.mmdb:/etc/nginx/GeoLite2-City.mmdb:ro
    networks:
      - mynetwork
    restart: unless-stopped
    command: ["./wait-for-it.sh", "webserver:80", "--", "python", "/app/geoip_exporter.py"]

networks:
  mynetwork:
    driver: bridge

